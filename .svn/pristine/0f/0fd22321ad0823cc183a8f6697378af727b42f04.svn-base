<!----------------------------------
****--@name     pHerwork
****--@role     ${*}
****--@date     2018/5/2
****--@author   zzh
----------------------------------->
<template>
    <div class="pHerwork patriarch">
        <header-title>
            <slot>TA的<span v-if="$route.query.type=='homework'">作业</span><span v-else>测评</span></slot>
        </header-title>
        <div class="stance"></div>
        <scroller lock-x height="6rem" @on-scroll-bottom="onScrollBottom" ref="scrollerBottom"
                  :scroll-bottom-offst="200">

            <div>
                <div class="hello_img">
                    <img style="width: 0.7rem;height: 0.7rem"  :src="getStaticPath(info.icon)" onerror="this.src='../../../../sasmobile/img/03.jpg'" alt="">
                    <div>{{info.name}}</div>
                    <div>
                        <span>{{info.school || '暂无'}} |</span>
                        <span>{{info.grade | grade(self)}}</span>
                    </div>
                </div>

                <div v-if="$route.query.type=='homework'" v-for="(item,index) in dataWorkList" :key='item.index'>
                    <div class="month topMonth">
                        {{item[0].num}}月
                    </div>
                    <div class="list-content" v-for='(item1,index1) in item' :key='item1.index1'>
                        <button v-if="item.isFinished" @click="open(1)" class="green" mini>已完成</button>
                        <button v-else class="red" mini>未完成</button>
                        <ul class="ul">
                            <li class="hTitle" style="margin-top: 0.16rem">{{item1.title}}  </li>
                            <li class="month">
                                <span>共 {{item1.totalQuestions}}小题 |</span>
                                <span>上交时间：{{item1.submitTime | formatDate('MM-dd HH:mm')}} |</span>
                                <span>{{item1.finishedNums}}人已上交 </span>
                            </li>
                            <li class="hTitle"><span class="month">发布者：</span><span
                                    class="name">{{item1.teacherName}}</span></li>
                            <li><span class="month">发布时间：</span><span class="name">{{item1.startTime}}</span></li>
                        </ul>
                    </div>
                </div>
                <div  v-for="(item,index) in dataTestList" :key='item.index'>
                    <div class="month topMonth">
                        {{item[0].num}}月
                    </div>
                    <div class="list-content" v-for='(item1,index1) in item' :key='item1.index1'>
                        <button @click="" v-if="item.answerStatus" class="green" mini>已完成</button>
                        <button v-else class="red" mini>未完成</button>
                        <ul class="ul">
                            <li class="hTitle" style="margin-top: 0.16rem">{{item1.name}}  </li>
                            <li class="month">
                                <span>共 {{item1.questionsNums}}小题 |</span>
                                <span>上交时间：{{item1.endTime | formatDate('MM-dd HH:mm')}} |</span>
                                <span>{{item1.submitNum}}人已上交 </span>
                            </li>
                            <li class="hTitle"><span class="month">发布者：</span><span
                                    class="name">{{item1.operatorName}}</span></li>
                            <li><span class="month">发布时间：</span><span class="name">{{item1.releaseTime}}</span></li>
                        </ul>
                    </div>
                </div>
                <load-more tip="加载更多" :show-loading="false" v-if="this.num*10<this.totalCount"></load-more>
            </div>
        </scroller>
    </div>
</template>
<script>
  import HeaderTitle from '../header'
  import {Scroller, LoadMore} from 'vux'
  import api from './api'

  export default {
    data () {
      return {
        self: this,
        onFetching: false,
        temp: false,
        articles: [],
        type: 1,
        data: [],
        num: 1,
        dataWorkList: {},
        info: {},
        totalCount: 0,
        dataTestList: {},
      }
    },
    methods: {
      onScrollBottom () {
        console.log(this.totalCount)
        if (this.onFetching) {
          if (this.num * 10 < this.totalCount) {
            if (this.temp) {
              this.num++
              this.temp = false
              this.$route.query.type == 'homework' ? this.setWorkData() : this.setTestDate()
            }
          } else {

          }

        } else {
          this.onFetching = true
          setTimeout(() => {
            this.$nextTick(() => {
              this.$refs.scrollerBottom.reset()
            })
            this.onFetching = false
          }, 2000)
        }
      },
      open (type) {
        if (type === 3) {
          this.$router.push({name: 'pHerquestion'})
        }
      },
      init () {
        this.$route.query.type == 'homework' ? this.setWorkData() : this.setTestDate()
        this.info = this.$store.state.loginInfo
      },
      setWorkData () {//获取作业
        this.ajax({
          ajaxSuccess: (data, res) => {this.getHistorySuccess(res)},
          url: api.historyWorkList.path,
          method: api.historyWorkList.method,
          params: {
            studentId: this.info.id,
            curPage: this.num,
            pageSize: 10
          },

        })
      },
      setTestDate () {//获取测评
        this.ajax({
          ajaxSuccess: (data, res) => {this.getHistoryTestSuccess(res)},
          url: api.historyTestList.path,
          method: api.historyTestList.method,
          params: {
            studentId: this.info.id,
            curPage: this.num,
            pageSize: 10
          },

        })
      },
      getHistorySuccess (res) {
        this.temp = true
        this.totalCount = res.data.totalCount
        if (res.data) {

          res.data.dataList.reduce((obj, item, index) => {
            let month = this.conductDate(item.startTime, 'MM')
            item.num = month
            return obj

          }, {})
        }
        let datalist = {}
        res.data.dataList.map(item => {
          if (datalist[item.num]) {
            datalist[item.num].push(item)
          } else {
            datalist[item.num] = [item]
          }
        })

        this.dataWorkList = Object.assign(this.dataWorkList, datalist)
        console.log(this.dataWorkList)
      },
      getHistoryTestSuccess (res) {
        this.temp = true
        this.totalCount = res.data.totalCount
        if (res.data) {

          res.data.dataList.reduce((obj, item, index) => {
            let month = this.conductDate(item.releaseTime, 'MM')
            item.num = month
            return obj

          }, {})
        }
        let datalist = {}
        res.data.dataList.map(item => {
          if (datalist[item.num]) {
            datalist[item.num].push(item)
          } else {
            datalist[item.num] = [item]
          }
        })
        this.dataTestList =  Object.assign(this.dataTestList, datalist)
        console.log(this.dataTestList,9999)
      },
    },
    created () {
      this.init()
    },
    components: {
      HeaderTitle,Scroller, LoadMore
    }
  }
</script>
<style lang="scss">
    @import '../../../pcss/patriarch/pHerwork';
    @import '../../../pcss/patriarch/home';
</style>
