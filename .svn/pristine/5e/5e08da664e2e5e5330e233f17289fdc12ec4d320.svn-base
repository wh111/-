<!--
****--@file     login.vue
****--@date     2018/04/23 9:29
****--@author   zyc
****--@describe  登录
-->
<template>
    <div class="helloWord">
        <div style="position: fixed">
            <div>
                <ul class="hello_header">
                    <li>
                        <x-icon type="ios-arrow-back" size="0.3rem"></x-icon>
                        <div @click="step=1">返回</div>
                        <div>关闭</div>
                    </li>
                    <li>绑定身份及账号</li>
                    <li>
                        <div></div>
                        <div></div>
                        <div></div>
                    </li>
                </ul>
            </div>
            <div class="hello_content">
                <div v-if="step==1">
                <img src="../../assets/image/login_03.jpg"/>
                <div class="identify" style="left: 0" @click="selectCard('student')"></div>
                <div class="identify" style="left: 33%"  @click="selectCard('teacher')"></div>
                <div class="identify" style="right: 0"  @click="selectCard('parents')"></div>
                </div>
                <div v-else>
                    <img src="../../assets/image/login_05.jpg"/>
                    <div class="hiddenItem" style="top: 1.465rem;">
                        <input class="inputItem" v-model="form.username" placeholder="账号"  type="text" />
                    </div>
                    <div class="hiddenItem" style="top: 2.115rem;">
                        <input style="height: 0.54rem" class="inputItem" placeholder="密码" v-model="form.password" type="password" />
                    </div>
                    <div class="hiddenItem" style="top:2.8rem" @click="login">

                    </div>

                </div>
                <!--<div>-->
                <!--<div @click="start">绑定身份及账号</div>-->
                <!--</div>-->
                <!--<alert v-model="show1" title="绑定账号" :hide-on-blur="true" @on-show="onShow" @on-hide="onHide">-->
                <!--<input ref="inputs" style="outline: none;border: 0" type="text" v-model="radioValue" placeholder="输入学生账号">-->
                <!--<flexbox-item align="left"><checklist :options="commonList" v-model="radioValue" :max="1" @on-change="change" id="change"></checklist></flexbox-item>-->
                <!--</alert>-->
                <!--<div>请先绑定您的学生，以便查看学生信息</div>-->
            </div>
        </div>
    </div>

    <!--<div>-->
    <!--登录页面######登录页面-->
    <!--<p>-->
    <!--是否登录：{{isLogin}}-->
    <!--</p>-->
    <!--<p>-->
    <!--当前登录的Token：&#45;&#45;{{token}}-&#45;&#45;-->
    <!--</p>-->
    <!--<p>-->
    <!--当前登录的人员ID：{{userInfo.account}}-->
    <!--</p>-->
    <!--<p>-->
    <!--当前登录的人员：{{userInfo.account}}-->
    <!--</p>-->
    <!--<p>-->
    <!--当前登录的邮箱：{{userInfo.account}}-->
    <!--</p>-->
    <!--<p>-->
    <!--<button @click="login">登录</button>-->
    <!--</p>-->
    <!--<p>-->
    <!--<button @click="getUserInfo">获取用户信息</button>-->
    <!--</p>-->
    <!--<p>-->
    <!--<button @click="loginOut">退出登录</button>-->
    <!--</p>-->
    <!--</div>-->
</template>

<script>
  import api from './api'
  import HeaderTitle from '../header'

  let Util = null
  export default {
    name: 'Login',
    data () {
      return {
        radioValue: [],
        show1: false,
        title: '13123',
        currRole: '',   // 学生:STUDENT  老师:TEACHER  家长:GUARDIAN
        commonList: ['学生', '家长', '老师'],
        step:1,
        form:{
          username:'',
          password:'',

        }
      }
    },
    created () {
      this.init()
    },
    methods: {
      init () {
        Util = this.$util
        // this.login()
        // this.concurrentAjax()
      },
      selectCard(){
        this.step=2
      },
      onHide () {
        this.open()
      },
      onShow () {
      },
      change (val, label) {
        // console.log('change', val, label)
      },
      start () {
        this.show1 = true
      },
      open () {
        if (this.$refs.inputs.value === this.commonList[0]) {
          this.currRole = 'STUDENT'
          //todo 需要后台提供相应的登录接口,暂时用
          this.$router.push({name: 'student'})
        }
        if (this.$refs.inputs.value === this.commonList[1]) {
          this.currRole = 'GUARDIAN'
          this.$router.push({name: 'patriarch'})
        }
        if (this.$refs.inputs.value === this.commonList[2]) {
          this.currRole = 'TEACHER'
          this.$router.push({name: 'teacher'})
        }
        Util.setUrlPrefix(this.currRole)
        this.login()
      },

      login: function () {
        console.log(22)
        let obj = {
          vue: this,
          options: {
            method: api.login.method,
            url: api.login.path,
            data:this.form
          }
        }
        this.$store.dispatch('getLoginInfoByGet', obj)
        this.getEnvs()
        this.$router.push({name: 'student'})
        this.getUserInfo ()
      },
      getUserInfo () {
        let obj = {
          vue: this,
          options: {
            method: api.userInfo.method,
            url: api.userInfo.path
          }
        }
        this.$store.dispatch('getLoginInfoByGet', obj)
      },
      //获取envs信息
      getEnvs () {
        let opt = {
//        ajaxSuccess: res => {
//          this.$store.commit('initEnvs', res.data)
//        },
//        ajaxParams: {
//          url: '/envs'
//        }
          url: '/envs',
          params: {
            curPage: 1,
            pageSize: 3
          },
          /**
           * 服务端返回的状态码检查,默认状态码检查前执行
           * @param {*} data  服务器端返回的实际数据结构,根据不同业务格式不同
           * @param {object} res 服务器端返回的response值 {data:'**',status:{conde:0,msg:'请求数据成功!'}}
           */
          ajaxSuccess: (data, res) => {
            this.$store.commit('initEnvs', res.data)
          }
        }
        this.ajax(opt)
      },
      loginOut () {
        let obj = {
          vue: this,
          options: {
            method: api.loginOut.method,
            url: api.loginOut.path
          }
        }
        this.$store.dispatch('loginOut', obj)
      },
      concurrentAjax () {
        let postArr = [
          {
            url: '/login',
            method: 'post',
            data: {
              username: 'admin',
              password: 666666
            }
          },
          {// 登录
            url: '/user/getUserInfo',
            method: 'get'
          }
        ]
        /* this.fetch.get({// 登录
          url: '/user/getUserInfo'
        }, function (data, res) {
          console.log(data)
        }) */
        this.ajax(null)
        this.fetch.all(postArr, function (loginData, userInfoData) {
          console.log(loginData)
          console.log(userInfoData)
        })
      }
    },
    computed: {
      token () {
        return this.$store.state.token
      },
      userInfo () {
        return this.$store.state.loginInfo || {}
      },
      isLogin () {
        return this.$store.state.isLogin
      }
    },
    components: {HeaderTitle}
  }
</script>
<style lang="scss">
    @import '../../css/HelloWord';
    @import '../../css/header';
</style>
