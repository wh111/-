<!--
****--@file     selfTestResult
****--@date     2018/6/1 14:58
****--@author   ${王恒}
****--@describe   自适应测评结果
-->
<template>
    <div class="selfTestResult-root">
        <topic-alert v-if="questionList.length"  :questionList="questionList" :questionsId="questionData.id"  @next="getAnswerQuestion"></topic-alert>
        <div class="question_header">
            <h3 style="font-size: 0.12rem;">第{{seq}}题 <span style="float: right;font-size: 0.12rem">还有<span style="color: #fd7416;font-size: 0.16rem;padding: 0 0.02rem ">{{(data.length-seq)}}</span>题</span></h3>
        </div>
        <scroller lock-y :scrollbar-x=false @on-scroll="getNext" v-if="questionData">
            <div>
            <question-show :show-data="questionData" :showInput=false :showAnswer=true></question-show>
            </div>
        </scroller>

    </div>
</template>
<script>
  /*当前组件必要引入*/
  let Util = null
  import api from '../api'
  import questionShow from '../../../../components/questionShow/show.vue'
  import topicAlert from '../../commonality/topicAlert.vue'
  export default {
    data () {
      return {
        questionList:[],
        questionData:{id:''},
        seq:this.$route.query.seq,
        timer:null,
        temp:true,
        data:[],
        postion:0,
      }
    },
    methods: {
      getAnswerQuestion(seq){
        this.seq=seq;
        this.questionData=this.data[this.seq-1];
      },
      getNext (val) {
        if (val.left > 0) {
          this.poition = 1
        } else if (val.left < 0) {
          this.poition = -1
        } else {
          clearTimeout(this.timer)
          this.timer = setTimeout(() => {
            let value = this.seq+ this.poition
            if (value < 1 || value > this.questionConf.count) {
              return
            }
            this.seq=value;
            this.questionData=this.data[this.seq-1];

          }, 200)
        }
      },
      //初始化请求列表数据
      init () {
        Util = this.$util;
         this.getAllAnswerQuestion()//获取试题详情

      },
//      getAnswerResult () {
//        let opt = {
//          ajaxSuccess: (data, res) => {
//            this.setData(data);//获取题号
//          },
//          url: '/autoAssessment/getAnswerResult',
//          params: {
//            id: this.$route.query.id
//
//          }
//        }
//        this.ajax(opt)
//      },
//      setData(data){
//        console.log(data)
////        data.knowledgeList.map((item)=>{
////          this.questionList=this.questionList.concat(item.stuAnswerInfo)
////          console.log(item.stuAnswerInfo)
////        })
//        this.questionList.map((item,index)=>{
////          item.questionsTypeName=
//        })
//      },
      getAllAnswerQuestion(){
        let opt = {
          ajaxSuccess: (data, res) =>{
            this.data=data;
            this.data.map((item, index) => {
              this.questionList.push({seq: index + 1, questionsTypeName: item.questionsTypeName,isAnswer:true})
            })
            console.log(this.questionList,'ppp')
            this.questionData=data[this.seq-1];
          },
          url:api.getAllAnswerQuestion.path,
          params: {
            assessmentAutoId: this.$route.query.id,
          }
        }
        this.ajax(opt)
      }
    },
    created () {
      this.init();
    },
    mounted () {
    },
    components: {topicAlert,questionShow}
  }

</script>
<style lang="scss">
  .selfTestResult-root{
      background: #DEEAE1;
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      padding: 0.15rem;
      min-height: 5.45rem
  }
</style>